<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFrameworks>net40;netstandard1.3;netstandard2.0</TargetFrameworks>
    <NetStandardImplicitPackageVersion>2.0.1</NetStandardImplicitPackageVersion>
    <AssemblyName>MathNet.Numerics</AssemblyName>
    <RootNamespace>MathNet.Numerics</RootNamespace>
    <IsPackable>true</IsPackable>
    <PackageId>MathNet.Numerics</PackageId>
    <VersionPrefix>4.0.0</VersionPrefix>
    <VersionSuffix>4.0.0</VersionSuffix>
    <PackageVersion>4.0.0</PackageVersion>
    <Version>4.0.0</Version>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <FileVersion>4.0.0.0</FileVersion>
    <Title>Math.NET Numerics</Title>
    <Authors>Christoph Ruegg, Marcus Cuda, Jurgen Van Gael</Authors>
    <Company>Math.NET Project</Company>
    <Product>Math.NET Numerics</Product>
    <Description>Math.NET Numerics is the numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Supports .Net Framework 4.0 or higher and .Net Standard 1.3 or higher, on Windows, Linux and Mac.</Description>
    <Copyright>Copyright Math.NET Project</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://numerics.mathdotnet.com/License.html</PackageLicenseUrl>
    <PackageProjectUrl>https://numerics.mathdotnet.com/</PackageProjectUrl>
    <PackageIconUrl>https://www.mathdotnet.com/images/MathNet128.png</PackageIconUrl>
    <PackageReleaseNotes>Explicit builds for .Net Framework 4.0 and higher and for .Net Standard 1.3 and 2.0
F#: explicit builds for .Net Framework 4.5 and higher and for .Net Standard 1.6 and 2.0
BREAKING: drop obsolete functionality (which has been marked as obsolete for a while)
BREAKING: drop support for .Net 3.5 and PCL profiles
BREAKING: F#: drop support for .Net 4.0 and PCL profiles
BREAKING: F#: depends on FSharp.Core 4.3.3
BREAKING: Native provider implementation types internal (but can be constructed explicitly)
BREAKING: Native provider control API moved from Control to per-provider Control classes
BREAKING: Linear Algebra: Vector.Map consistent with Matrix.Map, automatic fallback to inplace
BREAKING: Linear Algebra: Storage providers must always force all parameters (no defaults)
BREAKING: Statistics: Ranks and RankInplace of single precision now return single precision arrays
BUG: Ode Solver: fix typo in the Runge-Kutta solvers on time-step handling ~Ksero
BUG: fix Matrix.GetHashCode for wide matrices ~mjmckp
BUG: Distributions: BetaScaled no longer ignores optional random source parameter
BUG: Trigonometry: Complex trigonometric functions behave better on large imput ~diluculo
BUG: Trigonometry: Fix imaginary part sign of complex hyperbolic cotangent
Control.Describe: human readable summary of the effective Math.NET Numerics configuration
Providers: Native Provider support in .Net Standard 2.0 (but not in 1.x).
Linear Algebra: F# vector/matrix functions to accept all #seq instead of lists only
Linear Algebra: Vector MapInplace implemented at storage level
Curve Fitting: Fit.LineThroughOrigin shortcut
Optimization: Limited-Memory BFGS ~Florian Wechsung
Root Finding: Broyden: step size for calculating appox Jacobian, more robust step size formula ~Aappo Pulkkinen
Statistics: Kernel Density Estimation ~Christoph Albert
Statistics: GoodnessOfFit CoefficientOfDetermination ~Jon Smit
Fixed a whole range of inline documentation typos, misc code quality fixes ~Jonas Nyrup
Examples: moved to examples folder, new framework target integration project file examples
Benchmarks: builds for both net46 and netcoreapp2.0
Assemblies are now code-signed with an X.509 certificate, using SHA2-256 hashes</PackageReleaseNotes>
    <PackageTags>math numeric statistics probability integration interpolation regression solve fit linear algebra matrix fft</PackageTags>
    <IsTool>false</IsTool>
    <RepositoryUrl>https://github.com/mathnet/mathnet-numerics</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <NeutralLanguage>en</NeutralLanguage>
    <NoPackageAnalysis>false</NoPackageAnalysis>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <IncludeContentInPack>false</IncludeContentInPack>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <EnableDefaultCompileItems>true</EnableDefaultCompileItems>
    <NoWarn>1701;1702;1705;1591;1573</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'!='netstandard1.3'">
    <DefineConstants>NATIVE</DefineConstants>
  </PropertyGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net40'">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
  </ItemGroup>
  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>